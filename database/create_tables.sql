-- This is used to create the database (Set the owner first!).
CREATE DATABASE farmdata
    WITH 
    OWNER = user_name 
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1;

-- Once in the right database, use the following statements to create the required tables.

-- Adding the UUID generating extension.
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- These are used to create the tables.
DROP TABLE IF EXISTS farm, entry;

CREATE TABLE farm
(
    id uuid NOT NULL DEFAULT uuid_generate_v1(),
    farm_name character varying(50) NOT NULL,
    CONSTRAINT PK_farm PRIMARY KEY (id),
    CONSTRAINT UQ_farm_name UNIQUE (farm_name)
);

CREATE TABLE entry
(
    entry_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    farm_id uuid NOT NULL,
    date TIMESTAMP NOT NULL,
    entry_type character varying(11) NOT NULL CHECK (entry_type IN ('temperature', 'rainFall', 'pH')),
    read_value NUMERIC(5,2) NOT NULL CHECK (read_value BETWEEN -50.00 AND 500.00),
    CONSTRAINT "PK_entry" PRIMARY KEY (entry_id)
);

ALTER TABLE entry
	ADD CONSTRAINT FK_entry_farm
		FOREIGN KEY(farm_id) REFERENCES farm(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE;

/*
If using Postgres 13, UUID is supported natively and ids can be generated without the need to add the extension.
The line can be:

id uuid NOT NULL DEFAULT gen_random_uuid (),

(Azure doesn't support it, but Heroku does, for example)
*/
